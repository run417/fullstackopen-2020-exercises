{"version":3,"sources":["services/phonebook.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","className","type","text","Entry","props","entry","name","number","deleteEntry","onClick","Form","handleNameChange","handleNumberChange","handleSubmit","onSubmit","onChange","value","DisplayPhonebook","phonebook","filteredPhonebook","filterCriteria","entries","length","map","key","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filtered","setFiltered","setFilterCriteria","setMessage","useEffect","phonebookService","intialPhonebook","console","log","clearAddNewForm","event","target","filter","person","toLowerCase","includes","preventDefault","index","forEach","i","getIndex","returnedEntry","concat","setTimeout","catch","error","window","confirm","returnedPerson","p","f","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.992f631b.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = 'api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data);\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then(response => response.data);\n}\n\nconst deleteEntity = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`);\n    return request.then(response => response.data);\n}\n\nexport default { getAll, create, update, deleteEntity }","import React, { useState, useEffect } from 'react'\nimport phonebookService from './services/phonebook'\n\nconst Notification = ({ message }) => {\n    if (message === null) return null;\n    return(\n        <div className={`${message.type}Message`}>{message.text}</div>\n    )\n}\n\nconst Entry = (props) => {\n    const {name, number, id} = props.entry;\n    const deleteEntry = props.deleteEntry;\n    return (\n        <p>\n            {name} {number} <button onClick={() => deleteEntry(id)}>delete</button>\n        </p>\n\n    )\n}\n\nconst Form = (props) => {\n    const {name,number, handleNameChange, handleNumberChange, handleSubmit} = props;\n    return (\n        <form onSubmit={handleSubmit}>\n        <div>\n            name: <input onChange={handleNameChange} value={name}/>\n        </div>\n        <div>\n            number: <input onChange={handleNumberChange} value={number}/>\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n        </form>\n    )\n}\n\nconst DisplayPhonebook = (props) => {\n    const {phonebook, filteredPhonebook, filterCriteria, deleteEntry} = props;\n    const entries = (filterCriteria.length > 0) ? filteredPhonebook : phonebook;\n    return (\n        <div>\n            {entries.map((entry) =>\n                <Entry\n                    key={entry.name}\n                    entry={entry}\n                    deleteEntry={deleteEntry}\n                />\n            )}\n        </div>\n    )\n}\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [filtered, setFiltered] = useState([]);\n    const [filterCriteria, setFilterCriteria] = useState('');\n    const [message, setMessage] = useState(null);\n\n    useEffect(() => {\n        phonebookService\n            .getAll()\n            .then(intialPhonebook => {\n                setPersons(intialPhonebook);\n                console.log(intialPhonebook)\n            })\n    }, [])\n\n    const getIndex = (name) => {\n        let index = -1;\n        persons.forEach((person, i) => {\n            if (name === person.name) {\n                index = i;\n            }\n        });\n        return index;\n    }\n\n    const filterPhonebook = (name) => {\n        let filteredPersons = persons.filter(person => (person.name.toLowerCase().includes(name)));\n        return filteredPersons;\n    }\n\n    const clearAddNewForm = () => {\n        setNewName('');\n        setNewNumber('');\n    }\n\n    const addName = (event) => {\n        event.preventDefault();\n        const index = getIndex(newName);\n        if (index < 0) {\n            const entry = { name: newName, number: newNumber };\n            phonebookService\n                .create(entry)\n                .then(returnedEntry => {\n                    console.log(returnedEntry);\n                    setPersons(persons.concat(returnedEntry))\n                    setMessage({\n                        text: `Added ${returnedEntry.name}`, type: 'success'\n                    })\n                    setTimeout(() => { setMessage(null) }, 5000)\n                })\n                .catch(error => {\n                    setMessage({ text: error.response.data.error, type: 'error' })\n                    setTimeout(() => { setMessage(null) }, 10000)\n                });\n\n            if (filterCriteria.length > 0) {\n                console.log(filterCriteria);\n                // setting the state is not immediate\n                // validate empty name, number\n            }\n            clearAddNewForm();\n        } else {\n            // not checking for number equality\n            const message = window.confirm(\n                `${newName} is already added to phonebook, replace the old number with a new one?`\n            );\n            if (message) {\n                const entry = persons[index];\n                const newObject = { ...entry, number: newNumber }\n                phonebookService\n                    .update(entry.id, newObject)\n                    .then(returnedPerson => {\n                        setPersons(persons.map(p => p.id !== entry.id ? p : returnedPerson))\n                        if (filterCriteria.length > 0) {\n                            setFiltered(filtered.map(f => f.id !== entry.id ? f : returnedPerson))\n                        }\n                        clearAddNewForm();\n                        setMessage({\n                            text: `Updated ${returnedPerson.name}`, type: 'success'\n                        })\n                        setTimeout(() => { setMessage(null) }, 5000)\n                    })\n                    .catch(error => {\n                        setMessage({ text: error.response.data.error, type: 'error' })\n                        setTimeout(() => { setMessage(null) }, 10000)\n                    });\n            }\n        }\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value);\n    }\n\n    const deleteEntry = (id) => {\n        const entry = persons.find(person => person.id === id)\n        if (window.confirm(`Delete ${entry.name} ?`)) {\n            phonebookService\n                .deleteEntity(entry.id)\n                .then(() => {\n                    console.log('deleted')\n                    setMessage({\n                        text: `deleted person - '${entry.name}' with number - '${entry.number}'`,\n                        type: 'success'\n                    });\n                    setTimeout(() => { setMessage(null) }, 10000);\n                    setPersons(persons.filter(p => p.id !== entry.id))\n                    if (filterCriteria.length > 0) {\n                        setFiltered(filtered.filter(f => f.id !== entry.id))\n                    }\n                })\n                .catch(error =>{\n                    setMessage({\n                        text: `the person - ${entry.name} is already deleted from server`,\n                        type: 'error'\n                    });\n                    setTimeout(() => { setMessage(null) }, 10000);\n                })\n        }\n        console.log(entry)\n    }\n\n    const onChangeFilter = (event) => {\n        const value = event.target.value;\n        setFiltered(filterPhonebook(value));\n        setFilterCriteria(value);\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={message} />\n            <div>filter shown with <input onChange={onChangeFilter} value={filterCriteria} /></div>\n\n            <h2>add a new</h2>\n            <Form\n                name={newName}\n                number={newNumber}\n                handleNameChange={handleNameChange}\n                handleNumberChange={handleNumberChange}\n                handleSubmit={addName}\n            />\n\n            <h2>Numbers</h2>\n            <DisplayPhonebook\n                phonebook={persons}\n                filteredPhonebook={filtered}\n                filterCriteria={filterCriteria}\n                deleteEntry={deleteEntry}\n            />\n        </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}